apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: terraform-s3-bucket
  title: Create a s3 Bucket 
  description: |
    Creates the terrafrom code and infrastructure to add an s3 bucket. It uses the terraform modules s3 bucket infrastructure.

  tags:
    - terraform
    - aws
    - s3 
    - add
spec:
  owner: group:cds-snc/internal-sre
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in the s3 Bucket Details
      required:
        - bucket_name
        - billing_tag_value
      properties:
        bucket_name:
          title: s3 Bucket Name
          type: string
          description: The name of the s3 Bucket. Required.
          ui:autofocus: true
        billing_tag_value:
          title: Billing tag Value 
          type: string
          description: The value of the billing tag for the s3 bucket. Required. 
          ui:help: "Hint: This is probably already defined in your infrastructure, so look for the value in your existing infrastructure."

    - title: Choose a location
      required:
        - repoUrl
        - terraformLoc
      properties:
        repoUrl:
          title: Repository Location
          description: Name of the repository where the component will be stored
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            AllowedOrganizations:
              - cds-snc
            allowedOwners:
              - cds-snc
        terraformLoc:
            title: Terraform location 
            description: Location where you want the s3 terraform code to be stored 
            type: string
            ui:help: "Hint: This is the directory structure of where you want the s3 terraform files to live - for example terragrunt/aws/"


  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          bucket_name: ${{ parameters.bucket_name }}
          repoUrl: "github.com/cds-snc/${{ parameters.repoUrl }}"
          account: ${{ parameters.account }}
          billing_tag_value: ${{ parameters.billing_tag_value }}

    # Log the values
    - id: log values
      name: Log Values
      action: debug:log
      input:
        values:
          bucket_name: ${{ parameters.bucket_name }}
          repoUrl: "${{ parameters.repoUrl }}"
          account: ${{ parameters.account }}
          billing_tag_value: ${{ parameters.billing_tag_value }}

    # Create the terraform PR and publish it to Github. 
    - id: terraform_pr
      name: Create terraform PR
      action: publish:github:pull-request
      input:
       repoUrl: "github.com/cds-snc/${{ parameters.repoUrl }}"
       allowedHosts: ["github.com"]
       branchName: "backstage_template_s3_${{ parameters.bucket_name }}"
       title: 'üî© Create ${{ parameters.bucket_name }} AWS s3 Bucket'
       description: |
          ## Creating s3 Bucket ${{ parameters.bucket_name }}
            
          This is an initial pull request to create an s3 Bucket and was created based on the Backstage template. 
              
          The terraform code is using cds's terraform mdodule for the s3 bucket configuration. For more information, check the official documentation - https://github.com/cds-snc/terraform-modules/tree/main/S3
   
          *created by: [Backstage Software Template](https://github.com/cds-snc/backstage-scaffolder-templates/tree/main/templates/s3)* üë∑‚Äç‚ôÇÔ∏è‚öôÔ∏èüë∑‚Äç‚ôÄÔ∏è
       targetPath: "${{ parameters.terraformLoc }}/S3"
    
  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: 'Go to pull request'
        icon: github
      - title: 'To view more check documentation'
        icon: docs
        url: "https://github.com/cds-snc/terraform-modules/tree/main/s3"
name: Generate and Publish Backstage Technical Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

env:
  AWS_ACCOUNT: '${{ secrets.AWS_S3_TECHDOCS_ACCOUNT }}'
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0.0
        with:
          python-version: '3.13'

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '18'

      - name: Get Entity Details from Catalog Info
        id: get_entity
        run: |
          ENTITY_INFO=$(.github/workflows/scripts/get_entity_info.sh)
          echo "ENTITY_INFO=${ENTITY_INFO}" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: |
          npm install -g @techdocs/cli
          pip install "mkdocs-techdocs-core==1.3.3"
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::'${{env.AWS_ACCOUNT}}':role/gh_techdocs_role
          role-session-name: gh_techdocs_role
          aws-region: '${{env.AWS_REGION}}'

      - name: Build and publish documentation
        run: |
          # Generate
          npx techdocs-cli generate --no-docker
          # Publish
          npx techdocs-cli publish --publisher-type awsS3 --storage-name '${{ secrets.AWS_S3_TECHDOCS_BUCKET }}' --entity '${{ steps.get_entity.outputs.ENTITY_INFO }}'
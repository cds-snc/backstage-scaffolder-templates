name: Generate and Publish Backstage Technical Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

env:
  AWS_ACCOUNT: '${{ secrets.AWS_S3_TECHDOCS_ACCOUNT }}'
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0.0
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 #v4.0.2
        with:
          node-version: '18'

      - name: Get Entity Details from Catalog Info
        id: get_entity
        run: |
          ENTITY_INFO=$(.github/workflows/scripts/get_entity_info.sh)
          echo "ENTITY_INFO=${ENTITY_INFO}" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: |
          npm install -g @techdocs/cli
          pip install "mkdocs-techdocs-core==1.3.3"
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::'${{env.AWS_ACCOUNT}}':role/gh_techdocs_role
          role-session-name: gh_techdocs_role
          aws-region: '${{env.AWS_REGION}}'

      - name: Build and publish documentation
        run: |
          # Generate
          npx techdocs-cli generate --no-docker
          # Publish
          npx techdocs-cli publish --publisher-type awsS3 --storage-name '${{ secrets.AWS_S3_TECHDOCS_BUCKET }}' --entity '${{ steps.get_entity.outputs.ENTITY_INFO }}'